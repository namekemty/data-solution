
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');

:root {
  --transition: 0.25s;
  --spark: 5s;
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 100;
  font-style: normal;
  src: url("/fonts/Ruberoid-Thin.woff2") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 200;
  font-style: normal;
  src: url("/fonts/Ruberoid-UltraLight.woff2") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 300;
  font-style: normal;
  src: url("/fonts/Ruberoid-Light.woff2") format('woff2');
}


@font-face {
  font-family: 'Ruberoid';
  font-weight: 400;
  font-style: normal;
  src: url("/fonts/Roboto-Regular.ttf") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 500;
  font-style: normal;
  src: url("/fonts/Ruberoid-Medium.woff2") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 600;
  font-style: normal;
  src: url("/fonts/Ruberoid-SemiBold.woff2") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 700;
  font-style: normal;
  src: url("/fonts/Ruberoid-Bold.woff2") format('woff2');
}

@font-face {
  font-family: 'Ruberoid';
  font-weight: 800;
  font-style: normal;
  src: url("/fonts/Ruberoid-ExtraBold.woff2") format('woff2');
}


button {
  --cut: 0.1em;
  --active: 0;
  --bg:
  #06060f;
  background: #333;
  font-family: 'Ruberoid', sans-serif;
  font-size: 1rem;
  font-weight: 600;
  border: 0;
  cursor: pointer;
  padding: 0.9em 1.3em;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 100px;
  position: relative;
  // box-shadow:
  //   0 0 calc(var(--active) * 6em) calc(var(--active) * 1em) hsl(0, 100%, 100%),
  //   0 0.05em 0 0 hsl(0, 100%, 0%) inset,
  //   0 0.05em 0 0 hsl(0, 100%, 0%) inset;
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: 1;
}

button:active {
  scale: 1;
}

svg {
  overflow: visible !important;
}


button:before {
  content: "";
  position: absolute;
  inset: -0.01;
  z-index: -0.1;
  border: 0.1em solid #222;
  border-radius: 100px;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 100px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(
    from 0deg,
    transparent 0 340deg,
    white 360deg
  );
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 100px;
}

.backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 100px;
  transition: background var(--transition);
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

body:has(button:is(:hover, :focus-visible)),
button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

.sparkle-button {
  position: relative;
}

.particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  mask: radial-gradient(white, transparent 65%);
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.particle path {
  fill: hsl(0 0% 100%);
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  to {
    rotate: 360deg;
  }
}

.text {
  translate: 2% -6%;
  letter-spacing: 0.01ch;
  background: white;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
}

button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}

@media screen and (max-width: 425px) {
  button {
    scale: 0.9
  }
}